language: rust
rust:
  - stable
cache:
  cargo: true
branches:
  only:
    - staging
    - trying
    - master
  except:
    - staging.tmp
matrix:
  include:
    #- os: linux
    #  language: android
    #  compiler: gcc
    #  env:
    #    - JOB="android_gcc"
    #  android:
    #    components:
    #      - build-tools-26.0.1
    #      - android-18
    #  jdk: openjdk8
    - os: osx
      osx_image: xcode9
      compiler: clang
      env:
        - JOB="macos_clang"
    - os: linux
      compiler: gcc
      env:
        - JOB="linux_gcc"
      addons:
        apt:
          sources:
            - llvm-toolchain-precise
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
    - os: linux
      compiler: clang
      env:
        - JOB="linux_clang"
      addons:
        apt:
          sources:
            - llvm-toolchain-precise
            - ubuntu-toolchain-r-test
          packages:
            - clang-5.0
    - os: linux
      compiler: clang
      env:
        - JOB="linux_clang_coverage"
      sudo: required
      addons:
        apt:
          sources:
            - llvm-toolchain-precise
            - ubuntu-toolchain-r-test
          packages:
            - clang-5.0
            - libcurl4-openssl-dev
            - libelf-dev
            - libdw-dev
            - cmake
            - gcc
            - binutils-dev
            - libiberty-dev
notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/c09595dea93d78afd940
    on_success: change
    on_failure: always
    on_start: never
script:
  - cd .travis
  - chmod +x *.sh
  - cd $TRAVIS_BUILD_DIR
  - if [[ $JOB == "android_gcc" ]]; then .travis/android_gcc.sh; fi
  - if [[ $JOB == "macos_clang" ]]; then .travis/macos_clang.sh; fi
  - if [[ $JOB == "linux_gcc" ]]; then .travis/linux_gcc.sh; fi
  - if [[ $JOB == "linux_clang" ]]; then .travis/linux_clang.sh; fi
  - if [[ $JOB == "linux_clang_coverage" ]]; then .travis/linux_clang_coverage.sh; fi  
